.TH do_dssp 1 "Thu 26 Aug 2010" "" "GROMACS suite, VERSION 4.5"
.SH NAME
do_dssp - assigns secondary structure and calculates solvent accessible surface area

.B VERSION 4.5
.SH SYNOPSIS
\f3do_dssp\fP
.BI "\-f" " traj.xtc "
.BI "\-s" " topol.tpr "
.BI "\-n" " index.ndx "
.BI "\-ssdump" " ssdump.dat "
.BI "\-map" " ss.map "
.BI "\-o" " ss.xpm "
.BI "\-sc" " scount.xvg "
.BI "\-a" " area.xpm "
.BI "\-ta" " totarea.xvg "
.BI "\-aa" " averarea.xvg "
.BI "\-[no]h" ""
.BI "\-[no]version" ""
.BI "\-nice" " int "
.BI "\-b" " time "
.BI "\-e" " time "
.BI "\-dt" " time "
.BI "\-tu" " enum "
.BI "\-[no]w" ""
.BI "\-xvg" " enum "
.BI "\-sss" " string "
.SH DESCRIPTION
\&do_dssp 
\&reads a trajectory file and computes the secondary structure for
\&each time frame 
\&calling the dssp program. If you do not have the dssp program,
\&get it. do_dssp assumes that the dssp executable is
\&/usr/local/bin/dssp. If this is not the case, then you should
\&set an environment variable \fB DSSP\fR pointing to the dssp
\&executable, e.g.: 


\&\fB setenv DSSP /opt/dssp/bin/dssp\fR


\&The structure assignment for each residue and time is written to an
\&\fB .xpm\fR matrix file. This file can be visualized with for instance
\&\fB xv\fR and can be converted to postscript with \fB xpm2ps\fR.
\&Individual chains are separated by light grey lines in the xpm and
\&postscript files.
\&The number of residues with each secondary structure type and the
\&total secondary structure (\fB \-sss\fR) count as a function of
\&time are also written to file (\fB \-sc\fR).


\&Solvent accessible surface (SAS) per residue can be calculated, both in
\&absolute values (A2) and in fractions of the maximal accessible
\&surface of a residue. The maximal accessible surface is defined as
\&the accessible surface of a residue in a chain of glycines.
\&\fB Note\fR that the program \fB g_sas\fR can also compute SAS
\&and that is more efficient.


\&Finally, this program can dump the secondary structure in a special file
\&\fB ssdump.dat\fR for usage in the program \fB g_chi\fR. Together
\&these two programs can be used to analyze dihedral properties as a
\&function of secondary structure type.
.SH FILES
.BI "\-f" " traj.xtc" 
.B Input
 Trajectory: xtc trr trj gro g96 pdb cpt 

.BI "\-s" " topol.tpr" 
.B Input
 Structure+mass(db): tpr tpb tpa gro g96 pdb 

.BI "\-n" " index.ndx" 
.B Input, Opt.
 Index file 

.BI "\-ssdump" " ssdump.dat" 
.B Output, Opt.
 Generic data file 

.BI "\-map" " ss.map" 
.B Input, Lib.
 File that maps matrix data to colors 

.BI "\-o" " ss.xpm" 
.B Output
 X PixMap compatible matrix file 

.BI "\-sc" " scount.xvg" 
.B Output
 xvgr/xmgr file 

.BI "\-a" " area.xpm" 
.B Output, Opt.
 X PixMap compatible matrix file 

.BI "\-ta" " totarea.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-aa" " averarea.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.SH OTHER OPTIONS
.BI "\-[no]h"  "no    "
 Print help info and quit

.BI "\-[no]version"  "no    "
 Print version info and quit

.BI "\-nice"  " int" " 19" 
 Set the nicelevel

.BI "\-b"  " time" " 0     " 
 First frame (ps) to read from trajectory

.BI "\-e"  " time" " 0     " 
 Last frame (ps) to read from trajectory

.BI "\-dt"  " time" " 0     " 
 Only use frame when t MOD dt = first time (ps)

.BI "\-tu"  " enum" " ps" 
 Time unit: \fB fs\fR, \fB ps\fR, \fB ns\fR, \fB us\fR, \fB ms\fR or \fB s\fR

.BI "\-[no]w"  "no    "
 View output xvg, xpm, eps and pdb files

.BI "\-xvg"  " enum" " xmgrace" 
 xvg plot formatting: \fB xmgrace\fR, \fB xmgr\fR or \fB none\fR

.BI "\-sss"  " string" " HEBT" 
 Secondary structures for structure count

.SH SEE ALSO
.BR gromacs(7)

More information about \fBGROMACS\fR is available at <\fIhttp://www.gromacs.org/\fR>.
