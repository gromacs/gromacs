.TH g_membed 1 "Thu 26 Aug 2010" "" "GROMACS suite, VERSION 4.5"
.SH NAME
g_membed - embeds a protein into a lipid bilayer

.B VERSION 4.5
.SH SYNOPSIS
\f3g_membed\fP
.BI "\-f" " into_mem.tpr "
.BI "\-n" " index.ndx "
.BI "\-p" " topol.top "
.BI "\-o" " traj.trr "
.BI "\-x" " traj.xtc "
.BI "\-cpi" " state.cpt "
.BI "\-cpo" " state.cpt "
.BI "\-c" " membedded.gro "
.BI "\-e" " ener.edr "
.BI "\-g" " md.log "
.BI "\-ei" " sam.edi "
.BI "\-rerun" " rerun.xtc "
.BI "\-table" " table.xvg "
.BI "\-tablep" " tablep.xvg "
.BI "\-tableb" " table.xvg "
.BI "\-dhdl" " dhdl.xvg "
.BI "\-field" " field.xvg "
.BI "\-table" " table.xvg "
.BI "\-tablep" " tablep.xvg "
.BI "\-tableb" " table.xvg "
.BI "\-rerun" " rerun.xtc "
.BI "\-tpi" " tpi.xvg "
.BI "\-tpid" " tpidist.xvg "
.BI "\-ei" " sam.edi "
.BI "\-eo" " sam.edo "
.BI "\-j" " wham.gct "
.BI "\-jo" " bam.gct "
.BI "\-ffout" " gct.xvg "
.BI "\-devout" " deviatie.xvg "
.BI "\-runav" " runaver.xvg "
.BI "\-px" " pullx.xvg "
.BI "\-pf" " pullf.xvg "
.BI "\-mtx" " nm.mtx "
.BI "\-dn" " dipole.ndx "
.BI "\-[no]h" ""
.BI "\-[no]version" ""
.BI "\-nice" " int "
.BI "\-deffnm" " string "
.BI "\-xvg" " enum "
.BI "\-xyinit" " real "
.BI "\-xyend" " real "
.BI "\-zinit" " real "
.BI "\-zend" " real "
.BI "\-nxy" " int "
.BI "\-nz" " int "
.BI "\-rad" " real "
.BI "\-pieces" " int "
.BI "\-[no]asymmetry" ""
.BI "\-ndiff" " int "
.BI "\-maxwarn" " int "
.BI "\-[no]compact" ""
.BI "\-[no]v" ""
.SH DESCRIPTION
\&g_membed embeds a membrane protein into an equilibrated lipid bilayer at the position
\&and orientation specified by the user.

\&

\&SHORT MANUAL
\-\-\-\-\-\-\-\-\-\-\-\-

\&The user should merge the structure files of the protein and membrane (+solvent), creating a
\&single structure file with the protein overlapping the membrane at the desired position and
\&orientation. Box size should be taken from the membrane structure file. The corresponding topology
\&files should also be merged. Consecutively, create a tpr file (input for g_membed) from these files,with the following options included in the mdp file.

\& \- integrator      = md

\& \- energygrp       = Protein (or other group that you want to insert)

\& \- freezegrps      = Protein

\& \- freezedim       = Y Y Y

\& \- energygrp_excl  = Protein Protein

\&The output is a structure file containing the protein embedded in the membrane. If a topology
\&file is provided, the number of lipid and 
\&solvent molecules will be updated to match the new structure file.

\&For a more extensive manual see Wolf et al, J Comp Chem 31 (2010) 2169\-2174, Appendix.

\&

\&SHORT METHOD DESCRIPTION

\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

\&1. The protein is resized around its center of mass by a factor \-xy in the xy\-plane
\&(the membrane plane) and a factor \-z in the z\-direction (if the size of the
\&protein in the z\-direction is the same or smaller than the width of the membrane, a
\&\-z value larger than 1 can prevent that the protein will be enveloped by the lipids).

\&2. All lipid and solvent molecules overlapping with the resized protein are removed. All
\&intraprotein interactions are turned off to prevent numerical issues for small values of \-xy
\& or \-z

\&3. One md step is performed.

\&4. The resize factor (\-xy or \-z) is incremented by a small amount ((1\-xy)/nxy or (1\-z)/nz) and the
\&protein is resized again around its center of mass. The resize factor for the xy\-plane
\&is incremented first. The resize factor for the z\-direction is not changed until the \-xy factor
\&is 1 (thus after \-nxy iteration).

\&5. Repeat step 3 and 4 until the protein reaches its original size (\-nxy + \-nz iterations).

\&For a more extensive method descrition see Wolf et al, J Comp Chem, 31 (2010) 2169\-2174.

\&

\&NOTE
\-\-\-\-

\& \- Protein can be any molecule you want to insert in the membrane.

\& \- It is recommended to perform a short equilibration run after the embedding
\&(see Wolf et al, J Comp Chem 31 (2010) 2169\-2174, to re\-equilibrate the membrane. Clearly
\&protein equilibration might require longer.

\&

.SH FILES
.BI "\-f" " into_mem.tpr" 
.B Input
 Run input file: tpr tpb tpa 

.BI "\-n" " index.ndx" 
.B Input, Opt.
 Index file 

.BI "\-p" " topol.top" 
.B In/Out, Opt.
 Topology file 

.BI "\-o" " traj.trr" 
.B Output
 Full precision trajectory: trr trj cpt 

.BI "\-x" " traj.xtc" 
.B Output, Opt.
 Compressed trajectory (portable xdr format) 

.BI "\-cpi" " state.cpt" 
.B Input, Opt.
 Checkpoint file 

.BI "\-cpo" " state.cpt" 
.B Output, Opt.
 Checkpoint file 

.BI "\-c" " membedded.gro" 
.B Output
 Structure file: gro g96 pdb etc. 

.BI "\-e" " ener.edr" 
.B Output
 Energy file 

.BI "\-g" " md.log" 
.B Output
 Log file 

.BI "\-ei" " sam.edi" 
.B Input, Opt.
 ED sampling input 

.BI "\-rerun" " rerun.xtc" 
.B Input, Opt.
 Trajectory: xtc trr trj gro g96 pdb cpt 

.BI "\-table" " table.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-tablep" " tablep.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-tableb" " table.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-dhdl" " dhdl.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-field" " field.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-table" " table.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-tablep" " tablep.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-tableb" " table.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "\-rerun" " rerun.xtc" 
.B Input, Opt.
 Trajectory: xtc trr trj gro g96 pdb cpt 

.BI "\-tpi" " tpi.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-tpid" " tpidist.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-ei" " sam.edi" 
.B Input, Opt.
 ED sampling input 

.BI "\-eo" " sam.edo" 
.B Output, Opt.
 ED sampling output 

.BI "\-j" " wham.gct" 
.B Input, Opt.
 General coupling stuff 

.BI "\-jo" " bam.gct" 
.B Output, Opt.
 General coupling stuff 

.BI "\-ffout" " gct.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-devout" " deviatie.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-runav" " runaver.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-px" " pullx.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-pf" " pullf.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "\-mtx" " nm.mtx" 
.B Output, Opt.
 Hessian matrix 

.BI "\-dn" " dipole.ndx" 
.B Output, Opt.
 Index file 

.SH OTHER OPTIONS
.BI "\-[no]h"  "no    "
 Print help info and quit

.BI "\-[no]version"  "no    "
 Print version info and quit

.BI "\-nice"  " int" " 0" 
 Set the nicelevel

.BI "\-deffnm"  " string" " " 
 Set the default filename for all file options

.BI "\-xvg"  " enum" " xmgrace" 
 xvg plot formatting: \fB xmgrace\fR, \fB xmgr\fR or \fB none\fR

.BI "\-xyinit"  " real" " 0.5   " 
 Resize factor for the protein in the xy dimension before starting embedding

.BI "\-xyend"  " real" " 1     " 
 Final resize factor in the xy dimension

.BI "\-zinit"  " real" " 1     " 
 Resize factor for the protein in the z dimension before starting embedding

.BI "\-zend"  " real" " 1     " 
 Final resize faction in the z dimension

.BI "\-nxy"  " int" " 1000" 
 Number of iteration for the xy dimension

.BI "\-nz"  " int" " 0" 
 Number of iterations for the z dimension

.BI "\-rad"  " real" " 0.22  " 
 Probe radius to check for overlap between the group to embed and the membrane

.BI "\-pieces"  " int" " 1" 
 Perform piecewise resize. Select parts of the group to insert and resize these with respect to their own geometrical center.

.BI "\-[no]asymmetry"  "no    "
 Allow asymmetric insertion, i.e. the number of lipids removed from the upper and lower leaflet will not be checked.

.BI "\-ndiff"  " int" " 0" 
 Number of lipids that will additionally be removed from the lower (negative number) or upper (positive number) membrane leaflet.

.BI "\-maxwarn"  " int" " 0" 
 Maximum number of warning allowed

.BI "\-[no]compact"  "yes   "
 Write a compact log file

.BI "\-[no]v"  "no    "
 Be loud and noisy

.SH SEE ALSO
.BR gromacs(7)

More information about \fBGROMACS\fR is available at <\fIhttp://www.gromacs.org/\fR>.
