#include "{4}"

#ifdef {0}

{1}
{2}
{3}

#include "gmx_simd_macros.h"
#include "gmx_simd_vec.h"
#include "../../nbnxn_consts.h"
#ifdef CALC_COUL_EWALD
#include "maths.h"
#endif

#define SUM_SIMD4(x) (x[0]+x[1]+x[2]+x[3])

#define UNROLLI    NBNXN_CPU_CLUSTER_I_SIZE
#define UNROLLJ    GMX_SIMD_WIDTH_HERE

/* The stride of all the atom data arrays is max(UNROLLI,UNROLLJ) */
#if GMX_SIMD_WIDTH_HERE >= UNROLLI
#define STRIDE     GMX_SIMD_WIDTH_HERE
#else
#define STRIDE     UNROLLI
#endif

#if GMX_SIMD_WIDTH_HERE == 2
#define SUM_SIMD(x)  (x[0]+x[1])
#else
#if GMX_SIMD_WIDTH_HERE == 4
#define SUM_SIMD(x)  SUM_SIMD4(x)
#else
#if GMX_SIMD_WIDTH_HERE == 8
#define SUM_SIMD(x)  (x[0]+x[1]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7])
#else
#error "unsupported kernel configuration"
#endif
#endif
#endif


/* Decide if we should use the FDV0 table layout */
#if defined GMX_X86_AVX_256 && !defined GMX_USE_HALF_WIDTH_SIMD_HERE
/* With full AVX-256 SIMD, half SIMD-width table loads are optimal */
#if GMX_SIMD_WIDTH_HERE/2 == 4
#define TAB_FDV0
#endif
#else
/* We use the FDV0 table layout when we can use aligned table loads */
#if GMX_SIMD_WIDTH_HERE == 4
#define TAB_FDV0
#endif
#endif

/* Decide the stride for the 2 LJ parameters */
#ifdef GMX_X86_SSE2
#ifdef GMX_DOUBLE
#define NBFP_STRIDE  2
#else
#define NBFP_STRIDE  4
#endif
#else
#define NBFP_STRIDE  GMX_SIMD_WIDTH_HERE
#endif


#define SIMD_MASK_ALL   0xffffffff

#include "../nbnxn_kernel_simd_utils.h"

/* All functionality defines are set here, except for:
 * CALC_ENERGIES, ENERGY_GROUPS which are defined before.
 * CHECK_EXCLS, which is set just before including the inner loop contents.
 * The combination rule defines, LJ_COMB_GEOM or LJ_COMB_LB are currently
 * set before calling the kernel function. We might want to move that
 * to inside the n-loop and have a different combination rule for different
 * ci's, as no combination rule gives a 50% performance hit for LJ.
 */

/* We always calculate shift forces, because it's cheap anyhow */
#define CALC_SHIFTFORCES

/* Assumes all LJ parameters are identical */
/* #define FIX_LJ_C */
#endif /* {0} */

#ifdef CALC_ENERGIES
void
{5}(const nbnxn_pairlist_t     *nbl,
{6}const nbnxn_atomdata_t     *nbat,
{6}const interaction_const_t  *ic,
{6}rvec                       *shift_vec,
{6}real                       *f,
{6}real                       *fshift,
{6}real                       *Vvdw,
{6}real                       *Vc)
#else
void
{5}(const nbnxn_pairlist_t     *nbl,
{6}const nbnxn_atomdata_t     *nbat,
{6}const interaction_const_t  *ic,
{6}rvec                       *shift_vec,
{6}real                       *f,
{6}real                       *fshift)
#endif
#ifdef {0}
#include "nbnxn_kernel_simd_4xn_outer.h"
#else /* {0} */
{{
}}
#endif /* {0} */
