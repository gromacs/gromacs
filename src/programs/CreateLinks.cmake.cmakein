#
# This file is part of the GROMACS molecular simulation package.
#
# Copyright (c) 2012,2013,2014, by the GROMACS development team, led by
# Mark Abraham, David van der Spoel, Berk Hess, and Erik Lindahl,
# and including many others, as listed in the AUTHORS file in the
# top-level source directory and at http://www.gromacs.org.
#
# GROMACS is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1
# of the License, or (at your option) any later version.
#
# GROMACS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with GROMACS; if not, see
# http://www.gnu.org/licenses, or write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.
#
# If you want to redistribute modifications to GROMACS, please
# consider that scientific software is very special. Version
# control is crucial - bugs must be traceable. We will be happy to
# consider code for inclusion in the official distribution, but
# derived work must not be called official GROMACS. Details are found
# in the README & COPYING files - if they are missing, get the
# official version at http://www.gromacs.org.
#
# To help us fund GROMACS development, we humbly ask that you cite
# the research papers on the package. Check out http://www.gromacs.org.

# TODO: It would be nicer to have the list generated from the binary,
# but this has some complications.  As the same list is also needed for
# man page generation, this can wait for now.
set(SYMLINK_NAMES
    mdrun
    gmxcheck
    gmxdump
    grompp
    pdb2gmx
    tpbconv
    g_protonate
    g_x2top
    do_dssp
    editconf
    eneconv
    genbox
    genconf
    genion
    genrestr
    make_edi
    make_ndx
    mk_angndx
    trjcat
    trjconv
    trjorder
    xpm2ps
    g_anadock
    g_anaeig
    g_analyze
    g_angle
    g_bar
    g_bond
    g_bundle
    g_chi
    g_cluster
    g_clustsize
    g_confrms
    g_covar
    g_current
    g_density
    g_densmap
    g_densorder
    g_dielectric
    g_dipoles
    g_disre
    g_dist
    g_dos
    g_dyecoupl
    g_dyndom
    g_enemat
    g_energy
    g_filter
    g_gyrate
    g_h2order
    g_hbond
    g_helix
    g_helixorient
    g_hydorder
    g_lie
    g_mdmat
    g_mindist
    g_morph
    g_msd
    g_nmeig
    g_nmens
    g_nmtraj
    g_options
    g_order
    g_pme_error
    g_polystat
    g_potential
    g_principal
    g_rama
    g_rms
    g_rmsdist
    g_rmsf
    g_rotacf
    g_rotmat
    g_saltbr
    g_sans
    g_sas
    g_saxs
    g_select
    g_sgangle
    g_sham
    g_sigeps
    g_sorient
    g_spatial
    g_spol
    g_tcaf
    g_traj
    g_tune_pme
    g_vanhove
    g_velacc
    g_wham
    g_wheel
    )

if (NOT DEFINED BINARY_DIRECTORY)
    set(BINARY_DIRECTORY "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@BIN_INSTALL_DIR@")
endif ()
set(BINARY_SUFFIX "@GMX_BINARY_SUFFIX@@CMAKE_EXECUTABLE_SUFFIX@")
set(GMX_NATIVE_WINDOWS "@GMX_NATIVE_WINDOWS@")

foreach (linkname ${SYMLINK_NAMES})
    set(linkpath ${BINARY_DIRECTORY}/${linkname}${BINARY_SUFFIX})
    # Based on documentation, CMake only supports symbolic links on Unix,
    # although NTFS also has those (since Windows Vista; they require admin
    # permissions to create).
    if (GMX_NATIVE_WINDOWS)
        if (NOT QUIETLY)
            message(STATUS "Installing: Creating alias binary ${linkpath}")
        endif ()
        execute_process(
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
                ${BINARY_DIRECTORY}/gmx${BINARY_SUFFIX} ${linkpath})
    else()
        if (NOT QUIETLY)
            message(STATUS "Installing: Creating symbolic link ${linkpath}")
        endif ()
        if (EXISTS ${linkpath})
            FILE(REMOVE ${linkpath})
        endif ()
        execute_process(
            COMMAND ${CMAKE_COMMAND} -E create_symlink
                gmx${BINARY_SUFFIX} ${linkpath})
    endif()
endforeach ()
