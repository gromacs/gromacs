/*
 * This file is part of the GROMACS molecular simulation package.
 *
 * Copyright (c) 2012, by the GROMACS development team, led by
 * Mark Abraham, David van der Spoel, Berk Hess, and Erik Lindahl,
 * and including many others, as listed in the AUTHORS file in the
 * top-level source directory and at http://www.gromacs.org.
 *
 * GROMACS is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 *
 * GROMACS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with GROMACS; if not, see
 * http://www.gnu.org/licenses, or write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.
 *
 * If you want to redistribute modifications to GROMACS, please
 * consider that scientific software is very special. Version
 * control is crucial - bugs must be traceable. We will be happy to
 * consider code for inclusion in the official distribution, but
 * derived work must not be called official GROMACS. Details are found
 * in the README & COPYING files - if they are missing, get the
 * official version at http://www.gromacs.org.
 *
 * To help us fund GROMACS development, we humbly ask that you cite
 * the research papers on the package. Check out http://www.gromacs.org.
 */
/*! \file
 * \brief
 * Generated include file for configuration macros that affect installed
 * headers.
 *
 * This include file will configured by CMake and installed with GROMACS
 * header files so that they can refer to a central location for \#defines that
 * will be available for builds of projects that depend on GROMACS.
 *
 * gmx_header_config.h should be included instead of this file to allow usage
 * of relative install paths.
 *
 * \inlibraryapi
 * \ingroup module_utility
 */

/* TODO: For some reason, the comments below are not interpreted correctly
 * by Doxygen, so ignore them for now. */
/*! \cond */

/** Detect Cygwin */
#cmakedefine GMX_CYGWIN

/** Detect native (i.e. non-Cygwin) Windows */
#cmakedefine GMX_NATIVE_WINDOWS

/** Define if we have sufficient C++11 support */
#cmakedefine GMX_CXX11

/** Use our own instead of system XDR libraries */
#cmakedefine GMX_INTERNAL_XDR

/** Use the GROMACS software 1/sqrt(x) */
#cmakedefine GMX_SOFTWARE_INVSQRT

/** Use the PowerPC hardware 1/sqrt(x) */
#cmakedefine GMX_POWERPC_INVSQRT

/** Use sub-counters */
#cmakedefine GMX_CYCLE_SUBCOUNTERS

/** Enable special hacks for Cray XT3 */
#cmakedefine GMX_CRAY_XT3

/** Use GPU native acceleration */
#cmakedefine GMX_GPU

/** SSE2 instructions available */
#cmakedefine GMX_X86_SSE2

/** SSE4.1 instructions available */
#cmakedefine GMX_X86_SSE4_1

/** AVX 128-bit FMA instructions available */
#cmakedefine GMX_X86_AVX_128_FMA

/** AVX 256-bit instructions available */
#cmakedefine GMX_X86_AVX_256

/** Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#cmakedefine HAVE_FSEEKO

/** Define to 1 if _fseeki64 (and presumably _fseeki64) exists and is declared. */
#cmakedefine HAVE__FSEEKI64

/** The size of off_t, as computed by sizeof. */
#cmakedefine SIZEOF_OFF_T @SIZEOF_OFF_T@

/** Define for busy wait option  */
#cmakedefine TMPI_WAIT_FOR_NO_ONE

/** Define to 1 if you have the rsqrt() function. */
#cmakedefine HAVE_RSQRT

/** Define to 1 if you have the rsqrtf() function. */
#cmakedefine HAVE_RSQRTF

/** Define to 1 if you have the sqrtf() function. */
#cmakedefine HAVE_SQRTF

/** Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/** Define to 1 if you have the <x86intrin.h> header file */
#cmakedefine HAVE_X86INTRIN_H

/** Define to 1 if you have the <intrin.h> header file */
#cmakedefine HAVE_INTRIN_H

/** Define for sched.h (this is for thread_mpi) */
#cmakedefine HAVE_SCHED_H

/*! \endcond */
