/*
 * This file is part of the GROMACS molecular simulation package.
 *
 * Copyright (c) 2012,2013,2014,2018, by the GROMACS development team, led by
 * Mark Abraham, David van der Spoel, Berk Hess, and Erik Lindahl,
 * and including many others, as listed in the AUTHORS file in the
 * top-level source directory and at http://www.gromacs.org.
 *
 * GROMACS is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 *
 * GROMACS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with GROMACS; if not, see
 * http://www.gnu.org/licenses, or write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.
 *
 * If you want to redistribute modifications to GROMACS, please
 * consider that scientific software is very special. Version
 * control is crucial - bugs must be traceable. We will be happy to
 * consider code for inclusion in the official distribution, but
 * derived work must not be called official GROMACS. Details are found
 * in the README & COPYING files - if they are missing, get the
 * official version at http://www.gromacs.org.
 *
 * To help us fund GROMACS development, we humbly ask that you cite
 * the research papers on the package. Check out http://www.gromacs.org.
 */

/*! \internal \file
 *  This header has the sole purpose of generating kernels for the combinations of
 *  supported electrostatics types (cut-off, reaction-field, analytical and
 *  tabulated Ewald) and VDW types (cut-off + V shift, LJ-Ewald with
 *  geometric or Lorentz-Berthelot combination rule, F switch, V switch).
 *
 *  The Ewald kernels have twin-range cut-off versions with rcoul != rvdw which
 *  require an extra distance check to enable  PP-PME load balancing
 *  (otherwise, by default rcoul == rvdw).
 *
 *  NOTE: No include fence as it is meant to be included multiple times.
 */

#include "nbnxn_ocl_kernel_utils.clh"

/* Define the single-cutoff version of the kernel */

#define NB_INDIRECT_1(x, eel, vdw, y) x ## eel ## vdw ## y
#define NB_INDIRECT_2(x, eel, vdw, y) NB_INDIRECT_1(x, eel, vdw, y)
#define NB_KERNEL_FUNC_NAME(x, y)  NB_INDIRECT_2(x, EELNAME, VDWNAME, y)

#include "nbnxn_ocl_kernel.clh"

#undef NB_KERNEL_FUNC_NAME

/* Define the twin-cutoff version of the kernel */

#define NB_INDIRECT_1_TWINCUT(x, eel, vdw, y) x ## eel ## TwinCut ## vdw ## y
#define NB_INDIRECT_2_TWINCUT(x, eel, vdw, y) NB_INDIRECT_1_TWINCUT(x, eel, vdw, y)
#define NB_KERNEL_FUNC_NAME(x, y)  NB_INDIRECT_2_TWINCUT(x, EELNAME, VDWNAME, y)

#define VDW_CUTOFF_CHECK

#include "nbnxn_ocl_kernel.clh"

#undef NB_KERNEL_FUNC_NAME
#undef VDW_CUTOFF_CHECK
