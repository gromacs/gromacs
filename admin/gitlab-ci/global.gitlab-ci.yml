# Mix-in job definitions.
# The (hidden) job definitions in this file are available to the regular job
# definitions in other files because this file is first in the *include* list
# in the root `.gitlab-ci.yml` file.

# Parameters with many optional configurations may be in separate files.
# Refer to the Infrastructure section of the GROMACS Developer Guide.

# Our generic before_script to install dependencies and prepare the ccache directory.
.before_script:default:
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache

# Behavioral templates

# Use a persistent compiler cache to speed up rebuilds for a single job.
.use-ccache:
  cache:
    key: "$CI_JOB_NAME-$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - ccache/

# Tool chains

.use-cuda:
  variables:
    CMAKE_PRECISION_OPTIONS: "-DGMX_DOUBLE=OFF"
    CMAKE_GPU_OPTIONS: -DGMX_GPU=CUDA

.use-hip:
  variables:
    CMAKE_PRECISION_OPTIONS: "-DGMX_DOUBLE=OFF"
    CMAKE_GPU_OPTIONS: -DGMX_GPU=HIP -DCMAKE_PREFIX_PATH=/opt/rocm -DCMAKE_HIP_COMPILER=/opt/rocm/bin/amdclang++

.use-mpi:
  variables:
    CMAKE_MPI_OPTIONS: "-DGMX_MPI=ON"

.use-opencl:
  variables:
    CMAKE_PRECISION_OPTIONS: "-DGMX_DOUBLE=OFF"
    CMAKE_GPU_OPTIONS: -DGMX_GPU=OpenCL

.use-sycl:
  variables:
    CMAKE_PRECISION_OPTIONS: "-DGMX_DOUBLE=OFF"
    CMAKE_GPU_OPTIONS: -DGMX_GPU=SYCL

# Base definition for using gcc.
# Consumers must set job.variables.COMPILER_MAJOR_VERSION!
.use-gcc:base:
  variables:
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=gcc-$COMPILER_MAJOR_VERSION -DCMAKE_CXX_COMPILER=g++-$COMPILER_MAJOR_VERSION
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache

# Base definition for using clang.
# Consumers must set job.variables.COMPILER_MAJOR_VERSION!
.use-clang:base:
  variables:
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=clang-$COMPILER_MAJOR_VERSION -DCMAKE_CXX_COMPILER=clang++-$COMPILER_MAJOR_VERSION
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache
    - export ASAN_SYMBOLIZER_PATH=/usr/local/bin/llvm-symbolizer

# Base definition for using AMD Clang (amdclang).
.use-amdclang:base:
  variables:
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=/opt/rocm/bin/amdclang -DCMAKE_CXX_COMPILER=/opt/rocm/bin/amdclang++
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache


# Base definition for using oneAPI.
.use-oneapi:base:
  variables:
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DCMAKE_INCLUDE_PATH=/opt/intel/oneapi/compiler/latest/linux/include/sycl;/opt/intel/oneapi/compiler/latest/include/sycl -DCMAKE_PREFIX_PATH=/opt/intel/oneapi/compiler/latest/linux
    CMAKE_EXTRA_OPTIONS: -DGMX_FFT_LIBRARY=mkl
  before_script:
    # Necessary to override gitlab default 'set -e' which breaks Intel's
    # setvar.sh script
    - set +e
    - source /opt/intel/oneapi/setvars.sh
    - set -e
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache

# Base definition for tests using IntelMPI
.use-impi-test:base:
  variables:
    # Activate GPU-aware MPI. This is only required for suitable
    # multi-rank runs, but doing it here checks it is OK everywhere.
    I_MPI_OFFLOAD: 1
    # Avoid that Intel MPI intra-node SHM protocol uses /dev/shm because
    # by default that is too small in a k8s+docker setup. See
    # https://www.intel.com/content/www/us/en/docs/mpi-library/developer-guide-linux/2021-16/problem-mpi-limitation-for-docker.html
    # It's preferable that this is a memory-backed filesystem for performance,
    # but for testing correctness in a CI system, a normal filesystem is good enough.
    I_MPI_SHM_FILE_PREFIX_4K: /tmp/impi-shm
    # Disable direct GPU-GPU inter-process communication, which does
    # not work on the hardware in the GROMACS CI environment. Communication
    # is routed via the host.
    I_MPI_OFFLOAD_IPC: 0
  before_script:
    - mkdir -p $I_MPI_SHM_FILE_PREFIX_4K

# Base definition for using oneAPI IntelLLVM
.use-oneapi-intel-llvm:base:
  variables:
    CMAKE_COMPILER_SCRIPT: -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx
  before_script:
    # Necessary to override gitlab default 'set -e' which breaks Intel's setvar.sh script
    - set +e
    - source /opt/intel/oneapi/setvars.sh --include-intel-llvm --force
    - set -e
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache
