.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\" (and then reused elsewhere, since this isn't a perl package)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GROMACS 7"
.TH GROMACS 7 "" "@VERSION@" "GROMACS Manual"
.SH "NAME"
gromacs \- molecular dynamics simulation suite
.SH "DESCRIPTION"
.B GROMACS
(the Groningen Machine for Chemical Simulations) is a full-featured
suite of programs to perform molecular dynamics simulations - in other
words, to simulate the behavior of systems with hundreds to millions
of particles, using Newtonian equations of motion.  It is primarily
used for research on proteins, lipids, and polymers, but can be applied
to a wide variety of chemical and biological research questions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PP
The following commands make up the GROMACS suite.  Please refer to their
individual man pages for further details.
@PROGMANPAGES@
.PP
.SH "ADDITIONAL DOCUMENTATION"
.IX Header "ADDITIONAL DOCUMENTATION"
Consult the manual at <\fIhttp://www.gromacs.org/content/view/27/42/\fR> for an
introduction to molecular dynamics in general and GROMACS in particular,
as well as an overview of the individual programs.
.PP
The shorter HTML reference is available in \fB/usr/share/doc/gromacs/html/\fR .
.SH "REFERENCES"
.IX Header "REFERENCES"
The development of GROMACS is mainly funded by academic research grants.
To help us fund development, the authors humbly ask that you cite the GROMACS papers:
.PP
H.J.C. Berendsen, D. van der Spoel and R. van Drunen.  \fBGROMACS: A message-passing
parallel molecular dynamics implementation\fR.  Comp. Phys. Comm. \fI91\fR, 43-56 (1995)
.PP
Erik Lindahl, Berk Hess and David van der Spoel.  \fBGROMACS 3.0: A package for 
molecular simulation and trajectory analysis\fR.  J. Mol. Mod. \fI7\fR, 306-317 (2001)
.PP
B. Hess, C. Kutzner, D. van der Spoel, and E. Lindahl.  \fBGROMACS 4: Algorithms for
Highly Efficient, Load-Balanced, and Scalable Molecular Simulation\fR.  J. Chem. Theory 
Comput. \fI4\fR, 3, 435-447 (2008), <\fIhttp://dx.doi.org/10.1021/ct700301q\fR>
.SH "AUTHORS"
.IX Header "AUTHORS"
Current developers:
.PP
David van der Spoel <spoel@gromacs.org>
.br
Berk Hess <hess@gromacs.org>
.br
Erik Lindahl <lindahl@gromacs.org>
.PP
A full list of present and former contributors
is available at <http://www.gromacs.org>
.PP
This manual page is largely based on the GROMACS online reference, and was
prepared in this format by Nicholas Breen <nbreen@ofb.net>.
.SH "BUGS"
.IX Header "BUGS"
GROMACS has no major known bugs, but be warned that it stresses your CPU more
than most software.  Systems with slightly flaky hardware may prove unreliable
while running heavy-duty simulations.  If at all possible, please try to
reproduce bugs on another machine before reporting them.
